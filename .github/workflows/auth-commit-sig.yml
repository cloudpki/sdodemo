name: Authorize Commit Signing

on: [push]

jobs:
  auth-commit-sig:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout commit
        uses: actions/checkout@v3
        with:
          # Critical: check out the head commit on the branch. By default,
          # actions/checkout will check out a merge commit built for the pull
          # request and signed by Github itself. Using the pull-request HEAD
          # allows the action to check the latest commit on the pull request,
          # which must be signed by an authorized user before it can be merged.
          ref: ${{ github.event.pull_request.head.sha }}
        # If allowlist is configured, checkout allowlist repository. Otherwise, do 
        # not include this step.
        # The allowlist _can_ be in the same repository as the step above, or can be 
        # configured in a separate repository. See README for details on how to set 
        # up the allowlist configuration.
      - name: Checkout Allowlist repository
        uses: actions/checkout@v3
        with:
          # Path to allowlist repository in the format (owner/repo_name).
          # If it is the same repository as above, can skip this step.
          repository: "gobeyondidentity/commit-signing-allowlist"
          # SSH Key for private repositories. If repo is public, can omit.
          # See https://docs.github.com/en/developers/overview/managing-deploy-keys#deploy-keys.
          # The key should be stored as an actions secret or fetched from a secrets manager.
          # See https://docs.github.com/en/actions/security-guides/encrypted-secrets.
          ssh-key: ${{ secrets.ALLOWLIST_REPO_SSH_PRIV_KEY }}
          # Relative path under $GITHUB_WORKSPACE to place the repository.
          # NOTE: the repo_name will not be cloned as a folder. Only the files will
          # be checked out at this path.
          path: "allowlist-dir"
      - name: Authorize with Beyond Identity
        id: signature-verification
        uses: ./ # Uses the action in the root directory.
        env:
          # If API_BASE_URL is omitted, defaults to our production API server
          # at https://api.byndid.com/key-mgmt.
          API_BASE_URL: "https://api.byndid.com/key-mgmt"
        with:
          # API Token to call Beyond Identity cloud.
          # The token should be stored as an actions secret or fetched from a secrets manager.
          # https://docs.github.com/en/actions/security-guides/encrypted-secrets.
          api_token: ${{ secrets.BYNDID_KEY_MGMT_API_TOKEN }}
          # Repository which the signature verification action is performed on.
          # This is also used to match against repositories listed on the allowlist.
          repository: "gobeyondidentity/auth-commit-sig"
          # If allowlist is configured, set this to the file path to the allowlist
          # configuration file starting from $GITHUB_WORKSPACE.
          # If it is from a different repository, this variable should be prefixed
          # with `./` and the `path` from Step 2.
          # Ex. `./{path}/{path_to_allowlist}`
          # If it is the same repository as the action, it is just the path to the 
          # allowlist configuration file.
          # Ex. `./{path_to_allowlist}`
          # See README for details on how to format this file.
          allowlist_config_file_path: "./allowlist-dir/allowlist.yaml" 
        # Echo outcome JSON to standard out.
        # Outcome can be used in other steps as ${{ steps.signature-verification.outputs.outcome }}.
      - name: Print outcome
        run: |
          echo '${{ steps.signature-verification.outputs.outcome }}'
    # Output of job. Can be accessed in other jobs as ${{ needs.auth-commit-sig.outputs.outcome }}.
    outputs:
      outcome: ${{ steps.signature-verification.outputs.outcome }}
